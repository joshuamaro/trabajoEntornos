/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author joseluisgs
 */
public class DetallesCliente extends javax.swing.JFrame {
    private String iConoFoto ="";
    private static DetallesCliente v = null;
    TablaAlumnosModel tablaAlumnosModel = new TablaAlumnosModel();
    /**
     * Creates new form VenranaAlumnado
     */
    public DetallesCliente() {
        initComponents();
        iniciarVentana();
    }
    
    public static DetallesCliente nuevaInstancia(String titulo) {
        if(v == null) {
            v = new DetallesCliente();
            v.setTitle(titulo);
            
        }
        return v;         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        botonFoto = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        textNombre = new javax.swing.JTextField();
        textApellidos = new javax.swing.JTextField();
        calendarFecha = new com.toedter.calendar.JDateChooser();
        botonLimpiar = new javax.swing.JButton();
        botonSalvar = new javax.swing.JButton();
        botonModificar = new javax.swing.JButton();
        botonEliminar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        textBuscarApellido = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        botonBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaAlumnos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Ficha de Alumno/a"));

        botonFoto.setBackground(new java.awt.Color(255, 255, 255));
        botonFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonFotoActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre:");

        jLabel2.setText("Apellidos:");

        jLabel3.setText("Fecha Nacimiento:");

        textNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textNombreKeyTyped(evt);
            }
        });

        textApellidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textApellidosKeyTyped(evt);
            }
        });

        calendarFecha.setDateFormatString("dd/MM/yyyy");

        botonLimpiar.setText("Limpiar");
        botonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonLimpiarActionPerformed(evt);
            }
        });

        botonSalvar.setText("Salvar");
        botonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalvarActionPerformed(evt);
            }
        });

        botonModificar.setText("Modificar");
        botonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarActionPerformed(evt);
            }
        });

        botonEliminar.setText("Eliminar");
        botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(botonFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(textNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                                .addComponent(textApellidos))
                            .addComponent(calendarFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(botonLimpiar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botonSalvar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botonModificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botonEliminar)))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(botonFoto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(textNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(textApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(calendarFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonLimpiar)
                    .addComponent(botonSalvar)
                    .addComponent(botonModificar)
                    .addComponent(botonEliminar))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Lista de alumnos/as"));

        jLabel4.setText("Buscar por apellido:");

        botonBuscar.setText("Buscar");
        botonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarActionPerformed(evt);
            }
        });

        tablaAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tablaAlumnos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaAlumnosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaAlumnos);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textBuscarApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonBuscar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textBuscarApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(botonBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(245, 245, 245))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonLimpiarActionPerformed
        // TODO add your handling code here:
        limpiarCampos();
    }//GEN-LAST:event_botonLimpiarActionPerformed

    private void botonFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonFotoActionPerformed
        // TODO add your handling code here:
        seleccionarFotoAlumno();
    }//GEN-LAST:event_botonFotoActionPerformed

    private void botonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarActionPerformed
        // TODO add your handling code here:
        this.cargarTablaAlumnos(this.textBuscarApellido.getText());
    }//GEN-LAST:event_botonBuscarActionPerformed

    private void textApellidosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textApellidosKeyTyped
        // TODO add your handling code here:
        activarBotonesNuevo();
    }//GEN-LAST:event_textApellidosKeyTyped

    private void textNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textNombreKeyTyped
        // TODO add your handling code here:
        activarBotonesNuevo();
    }//GEN-LAST:event_textNombreKeyTyped

    private void tablaAlumnosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaAlumnosMouseClicked
        // TODO add your handling code here:
        int fila= this.tablaAlumnos.getSelectedRow();
        if(fila!=-1){
            cargarDdatosFormularioDeTabla(fila);
            // activamos boton eliminar
            this.botonEliminar.setEnabled(true);
        } 
        
    }//GEN-LAST:event_tablaAlumnosMouseClicked

    private void botonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalvarActionPerformed
        // TODO add your handling code here:
        salvarAlumno();
    }//GEN-LAST:event_botonSalvarActionPerformed

    private void botonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarActionPerformed
        // TODO add your handling code here:
        eliminarAlumno();
    }//GEN-LAST:event_botonEliminarActionPerformed

    private void botonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarActionPerformed
        // TODO add your handling code here:
        modificarAlumno();
    }//GEN-LAST:event_botonModificarActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
       System.gc();
       
    }//GEN-LAST:event_formWindowClosed

    private void cargarDdatosFormularioDeTabla(int fila) {
        this.textNombre.setText(this.tablaAlumnos.getValueAt(fila, 1).toString());
        this.textApellidos.setText(this.tablaAlumnos.getValueAt(fila, 2).toString());
        
        this.calendarFecha.setDate(new Date(this.tablaAlumnos.getValueAt(fila, 3).toString()));
        this.ponerFotoAlumno(this.tablaAlumnos.getValueAt(fila, 4).toString());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DetallesCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DetallesCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DetallesCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DetallesCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DetallesCliente().setVisible(true);
            }
        });
    }
    
    private void iniciarVentana() {
       this.setVisible(true);
       this.setLocationRelativeTo(null);
       //this.setTitle(titulo);
       ponerIconoVentana();
       ponerFotoAlumno("foto.jpg");
       
       // Todos os botones false
       this.botonSalvar.setEnabled(false);
       this.botonModificar.setEnabled(false);
       this.botonEliminar.setEnabled(false);
       this.calendarFecha.setDate(new Date());
       
       // Cargamos alumnos
       cargarTablaAlumnos("");
       
       

    }
    
    private void ponerIconoVentana() {
        Clase c = Clase.nuevaInstancia();
        Toolkit t = Toolkit.getDefaultToolkit();
        this.setIconImage(t.getImage(c.getPathBaseImagenes()+"icono.png"));
    }
    
    private void ponerFotoAlumno(String foto) {
        Clase c = Clase.nuevaInstancia();
               
        //Ponemos el icono como imagen en el boton
        ImageIcon imageIcon = new ImageIcon(new ImageIcon(c.getPathBaseFotos()+foto).getImage().getScaledInstance(95, 95, Image.SCALE_DEFAULT));
        this.botonFoto.setIcon(imageIcon);
        this.iConoFoto = foto;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonBuscar;
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton botonFoto;
    private javax.swing.JButton botonLimpiar;
    private javax.swing.JButton botonModificar;
    private javax.swing.JButton botonSalvar;
    private com.toedter.calendar.JDateChooser calendarFecha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaAlumnos;
    private javax.swing.JTextField textApellidos;
    private javax.swing.JTextField textBuscarApellido;
    private javax.swing.JTextField textNombre;
    // End of variables declaration//GEN-END:variables

    private void limpiarCampos() {
        this.ponerFotoAlumno("foto.jpg");
        this.textNombre.setText("");
        this.textApellidos.setText("");
        this.calendarFecha.setDate(new Date());
        
       this.botonSalvar.setEnabled(false);
       this.botonModificar.setEnabled(false);
       this.botonEliminar.setEnabled(false);
        
        
    }

    private void seleccionarFotoAlumno() {
        //Seleccionamos la foto
        JFileChooser elegirRuta = new JFileChooser();
        elegirRuta.setDialogTitle("Selecciona el fichero de foto del alumno"); 
        FileNameExtensionFilter filtroFichero=new FileNameExtensionFilter("JPG, PNG & GIF","jpg","png","gif");
        elegirRuta.setFileFilter(filtroFichero);
        int seleccion = elegirRuta.showOpenDialog(this);
        // Si pulsa guardar o aceptar
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File fichero = elegirRuta.getSelectedFile();
            System.out.println("fichero " + fichero.getAbsolutePath());
            Clase c = Clase.nuevaInstancia();
            c.copiarFotoAlumno(fichero);
            ponerFotoAlumno(fichero.getName());
            
        }
    }

    private void cargarTablaAlumnos(String filtroApellidos) {
        this.tablaAlumnosModel=new TablaAlumnosModel();
        
        tablaAlumnos.setRowSelectionAllowed(true);
        tablaAlumnos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        this.tablaAlumnos.setModel(tablaAlumnosModel);
        this.tablaAlumnosModel.setFilaAlumnos(Alumno.listaAlumnos(filtroApellidos));
    }
    
    private void activarBotonesNuevo() {
        this.botonSalvar.setEnabled(true);
        int fila= this.tablaAlumnos.getSelectedRow();
        if(fila>=0){
            this.botonModificar.setEnabled(true);
            this.botonEliminar.setEnabled(false);
        } 
        
    }

    private void salvarAlumno() {
        Alumno a = new Alumno();
        a.setNombre(this.textNombre.getText());
        a.setApellidos(this.textApellidos.getText());
        
        //Sacamos la fecha y su formato
        Date d = this.calendarFecha.getDate();
        String formato = this.calendarFecha.getDateFormatString();
        SimpleDateFormat sf = new SimpleDateFormat(formato);
        //System.err.println(String.valueOf(sf.format(d)));
        a.setfNacimiento(sf.format(d));
        
        // Foto
        a.setFoto(this.iConoFoto);
        //System.err.println(this.iConoFoto);
        
        // insertamos
        a.insertarBD();
        
        // recargamos la tabla
        this.cargarTablaAlumnos("");
        
    }


    private void eliminarAlumno() {
        Alumno a = new Alumno();
        int fila = this.tablaAlumnos.getSelectedRow();
        a.setId((int)this.tablaAlumnos.getValueAt(fila, 0));
        
        //Preguntamos si queremos cerrar
        int seleccion = JOptionPane.showConfirmDialog(null, "¿Realmente desea eliminar este alumno/a?", "Salir", JOptionPane.YES_NO_OPTION);
        if (seleccion == JOptionPane.YES_OPTION){
             a.eliminarBD();
            // recargamos la tabla
            this.cargarTablaAlumnos("");
            this.botonEliminar.setEnabled(false);
        }
           
    }

    private void modificarAlumno() {
        Alumno a = new Alumno();
        int fila = this.tablaAlumnos.getSelectedRow();
        a.setId((int)this.tablaAlumnos.getValueAt(fila, 0));
        a.setNombre(this.textNombre.getText());
        a.setApellidos(this.textApellidos.getText());
        
        //Sacamos la fecha y su formato
        Date d = this.calendarFecha.getDate();
        String formato = this.calendarFecha.getDateFormatString();
        SimpleDateFormat sf = new SimpleDateFormat(formato);
        //System.err.println(String.valueOf(sf.format(d)));
        a.setfNacimiento(sf.format(d));
        
        // Foto
        a.setFoto(this.iConoFoto);
        
        //Preguntamos si queremos cerrar
        int seleccion = JOptionPane.showConfirmDialog(null, "¿Realmente desea modificar este alumno/a?", "Salir", JOptionPane.YES_NO_OPTION);
        if (seleccion == JOptionPane.YES_OPTION){
             a.modificarBD();
            // recargamos la tabla
            this.cargarTablaAlumnos("");
            this.botonModificar.setEnabled(false);
        }
    }
}
